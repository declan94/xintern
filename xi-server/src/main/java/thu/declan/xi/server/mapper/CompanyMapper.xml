<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="thu.declan.xi.server.mapper.CompanyMapper">

	<resultMap type="Company" id="companyResult">
		<result property="id" column="c_id" />
		<result property="accountId" column="c_accountId" />
		<result property="name" column="c_name" />
		<result property="addr" column="c_addr" />
		<result property="type" column="c_type" />
		<result property="scale" column="c_scale" />
		<result property="contact" column="c_contact" />
		<result property="contactPhone" column="c_contactPhone" />
		<result property="email" column="c_email" />
		<result property="phone" column="c_phone" />
		<result property="industry" column="c_industry" />
		<result property="code" column="c_code" />
		<result property="intro" column="c_intro" />
	</resultMap>
	
	<sql id="insertBaseColumns" >
		c_accountId, c_name, c_addr, c_type, c_scale, c_contact, c_contactPhone, c_email, c_phone, c_industry, c_code, c_intro
	</sql>
    
	<sql id="selectBaseColumns" >
		c_id, c_accountId, c_name, c_addr, c_type, c_scale, c_contact, c_contactPhone, c_email, c_phone, c_industry, c_code, c_intro
	</sql>
    
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Company">
		insert into xi_company (<include refid="insertBaseColumns" />) 
		values (#{accountId}, #{name}, #{addr}, #{type}, #{scale}, #{contact}, #{contactPhone}, #{email}, #{phone}, #{industry}, #{code}, #{intro})
	</insert>
    
	<update id="update" parameterType="Company">
		update xi_company 
		<trim prefix="set" suffixOverrides=",">
			<if test="name != null"> c_name = #{name}, </if>
			<if test="addr != null"> c_addr = #{addr}, </if>
			<if test="type != null"> c_type = #{type}, </if>
			<if test="scale != null"> c_scale = #{scale}, </if>
			<if test="contact != null"> c_contact = #{contact}, </if>
			<if test="contactPhone != null"> c_contactPhone = #{contactPhone}, </if>
			<if test="email != null"> c_email = #{email}, </if>
			<if test="phone != null"> c_phone = #{phone}, </if>
			<if test="industry != null"> c_industry = #{industry}, </if>
			<if test="code != null"> c_code = #{code}, </if>
			<if test="intro != null"> c_intro = #{intro}, </if>
		</trim>
		where c_id = #{id}
	</update>

	<select id="selectOne" parameterType="int" resultMap="companyResult">
		select <include refid="selectBaseColumns" />
		from xi_company
		where c_id = #{id}
	</select>
    	
	<select id="selectByAccountId" parameterType="int" resultMap="companyResult">
		select <include refid="selectBaseColumns" />
		from xi_company
		where c_accountId = #{accountId}
	</select>
    
	<select id="selectList" parameterType="Company" resultMap="companyResult">
		select <include refid="selectBaseColumns" />
		from xi_company
		<trim prefix="where" suffixOverrides="and">
			<if test="contact != null"> c_contact = #{contact} and </if>
		</trim>
	</select>
    
	<select id="selectCount" parameterType="Company" resultType="int">
		select count(*)
		from xi_company
		<trim prefix="where" suffixOverrides="and">
			<if test="contact != null"> c_contact = #{contact} and </if>
		</trim>
	</select>
	
	<delete id="delete" parameterType="int">
		delete from xi_company where c_id = #{id}
	</delete>
   	
</mapper>
