<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="thu.declan.xi.server.mapper.ResumeMapper">

    <resultMap type="Resume" id="resumeResult">
        <result property="id" column="r_id" />
        <result property="positionId" column="r_positionId" />
        <result property="stuId" column="r_stuId" />
        <result property="state" column="r_state" />
        <result property="commentStu" column="r_commentStu" />
        <result property="commentComp" column="r_commentComp" />
    </resultMap>
	
    <sql id="insertBaseColumns" >
        r_positionId, r_stuId, r_state, r_commentStu, r_commentComp
    </sql>
    
    <sql id="selectBaseColumns" >
        r_positionId, r_stuId, r_state, r_commentStu, r_commentComp
    </sql>
    
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Resume">
        insert into xi_resume (<include refid="insertBaseColumns" />) 
        values (#{positionId}, #{stuId}, #{state}, #{commentStu}, #{commentComp})
    </insert>
    
    <update id="update" parameterType="Resume">
        update xi_resume 
        <trim prefix="set" suffixOverrides=",">
            <if test="state != null"> r_state = #{state}, </if>
            <if test="commentStu != null"> r_commentStu = #{commentStu}, </if>
            <if test="commentComp != null"> r_commentComp = #{commentComp}, </if>
        </trim>
        where r_id = #{id}
    </update>

    <select id="selectOne" parameterType="int" resultMap="resumeResult">
        select <include refid="selectBaseColumns" />
        from xi_resume
        where r_id = #{id}
    </select>
    	
    <select id="selectByPositionId" parameterType="int" resultMap="resumeResult">
        select <include refid="selectBaseColumns" />
        from xi_resume
        where r_positionId = #{positionId}
    </select>
	
	<select id="selectByStudentId" parameterType="int" resultMap="resumeResult">
        select <include refid="selectBaseColumns" />
        from xi_resume
        where r_stuId = #{studentId}
    </select>
    
    <select id="selectList" parameterType="Resume" resultMap="resumeResult">
        select <include refid="selectBaseColumns" />
        from xi_resume
        <trim prefix="where" suffixOverrides="and">
        </trim>
    </select>
    
    <select id="selectCount" parameterType="Resume" resultType="int">
        select count(*)
        from xi_resume
        <trim prefix="where" suffixOverrides="and">√è
        </trim>
    </select>
   	
</mapper>
